export const data = JSON.parse("{\"key\":\"v-62d2cf9c\",\"path\":\"/bigdata/hive/3.HiveSQL%20%E6%95%B0%E6%8D%AE%E6%93%8D%E6%8E%A7%E3%80%81%E6%9F%A5%E8%AF%A2%E8%AF%AD%E8%A8%80%EF%BC%88DML%E3%80%81DQL%EF%BC%89.html\",\"title\":\"Hive SQL 数据操控、查询语言（DML，DQL）\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"Hive SQL 数据操控、查询语言（DML，DQL）\",\"description\":\"1. Hive SQL-DML-Load加载数据 所谓加载是指：将数据文件移动到与Hive表对应的位置，移动时是纯复制、移动操作。 对于local（Hiveserver2所在机器）是复制操作，HDFS中的文件时移动操作。 ------ load语法规则 ---- LOAD DATA [LOCAL] INPATH 'filepath' [OVERWRITE] INTO TABLE tablename [PARTITION (partcol1=val1, partcol2=val2 ...)] LOAD DATA [LOCAL] INPATH 'filepath' [OVERWRITE] INTO TABLE tablename [PARTITION (partcol1=val1, partcol2=val2 ...)] [INPUTFORMAT 'inputformat' SERDE 'serde'] (3.0 or later)\"},\"headers\":[{\"level\":2,\"title\":\"1.1 基本操作\",\"slug\":\"_1-1-基本操作\",\"link\":\"#_1-1-基本操作\",\"children\":[]},{\"level\":2,\"title\":\"1.2 Hive3.0 新特性\",\"slug\":\"_1-2-hive3-0-新特性\",\"link\":\"#_1-2-hive3-0-新特性\",\"children\":[]},{\"level\":2,\"title\":\"2.1 基本操作\",\"slug\":\"_2-1-基本操作\",\"link\":\"#_2-1-基本操作\",\"children\":[]},{\"level\":2,\"title\":\"2.2 FROM 多重插入\",\"slug\":\"_2-2-from-多重插入\",\"link\":\"#_2-2-from-多重插入\",\"children\":[]},{\"level\":2,\"title\":\"2.3 Dynamic Partition Inserts 动态分区插入\",\"slug\":\"_2-3-dynamic-partition-inserts-动态分区插入\",\"link\":\"#_2-3-dynamic-partition-inserts-动态分区插入\",\"children\":[]},{\"level\":2,\"title\":\"2.4 Insert Directory导出数据\",\"slug\":\"_2-4-insert-directory导出数据\",\"link\":\"#_2-4-insert-directory导出数据\",\"children\":[]},{\"level\":2,\"title\":\"3.1 实现原理\",\"slug\":\"_3-1-实现原理\",\"link\":\"#_3-1-实现原理\",\"children\":[{\"level\":3,\"title\":\"3.1.1 delta文件详解\",\"slug\":\"_3-1-1-delta文件详解\",\"link\":\"#_3-1-1-delta文件详解\",\"children\":[]},{\"level\":3,\"title\":\"3.1.2 合并器\",\"slug\":\"_3-1-2-合并器\",\"link\":\"#_3-1-2-合并器\",\"children\":[]}]},{\"level\":2,\"title\":\"3.2 Hive 事务表使用设置与局限性\",\"slug\":\"_3-2-hive-事务表使用设置与局限性\",\"link\":\"#_3-2-hive-事务表使用设置与局限性\",\"children\":[{\"level\":3,\"title\":\"3.2.1 局限性\",\"slug\":\"_3-2-1-局限性\",\"link\":\"#_3-2-1-局限性\",\"children\":[]},{\"level\":3,\"title\":\"3.2.2 参数设置\",\"slug\":\"_3-2-2-参数设置\",\"link\":\"#_3-2-2-参数设置\",\"children\":[]}]},{\"level\":2,\"title\":\"3.3 使用事务表\",\"slug\":\"_3-3-使用事务表\",\"link\":\"#_3-3-使用事务表\",\"children\":[]},{\"level\":2,\"title\":\"5.1 Hive SQL select查询基础语法\",\"slug\":\"_5-1-hive-sql-select查询基础语法\",\"link\":\"#_5-1-hive-sql-select查询基础语法\",\"children\":[{\"level\":3,\"title\":\"5.1.1 select expr\",\"slug\":\"_5-1-1-select-expr\",\"link\":\"#_5-1-1-select-expr\",\"children\":[]},{\"level\":3,\"title\":\"5.1.2 ALL 、DISTINCT\",\"slug\":\"_5-1-2-all-、distinct\",\"link\":\"#_5-1-2-all-、distinct\",\"children\":[]},{\"level\":3,\"title\":\"5.1.3 WHERE\",\"slug\":\"_5-1-3-where\",\"link\":\"#_5-1-3-where\",\"children\":[]},{\"level\":3,\"title\":\"5.1.4 分区查询\",\"slug\":\"_5-1-4-分区查询\",\"link\":\"#_5-1-4-分区查询\",\"children\":[]},{\"level\":3,\"title\":\"5.1.5 GROUP BY\",\"slug\":\"_5-1-5-group-by\",\"link\":\"#_5-1-5-group-by\",\"children\":[]},{\"level\":3,\"title\":\"5.1.5 HAVING\",\"slug\":\"_5-1-5-having\",\"link\":\"#_5-1-5-having\",\"children\":[]},{\"level\":3,\"title\":\"5.1.6 HAVING和WHERE的区别\",\"slug\":\"_5-1-6-having和where的区别\",\"link\":\"#_5-1-6-having和where的区别\",\"children\":[]},{\"level\":3,\"title\":\"5.1.7 LIMIT\",\"slug\":\"_5-1-7-limit\",\"link\":\"#_5-1-7-limit\",\"children\":[]},{\"level\":3,\"title\":\"5.1.8 执行顺序\",\"slug\":\"_5-1-8-执行顺序\",\"link\":\"#_5-1-8-执行顺序\",\"children\":[]}]},{\"level\":2,\"title\":\"5.2 Hive SQL select查询高阶语法\",\"slug\":\"_5-2-hive-sql-select查询高阶语法\",\"link\":\"#_5-2-hive-sql-select查询高阶语法\",\"children\":[{\"level\":3,\"title\":\"5.2.1 ORDER BY\",\"slug\":\"_5-2-1-order-by\",\"link\":\"#_5-2-1-order-by\",\"children\":[]},{\"level\":3,\"title\":\"5.2.2 CLUSTER BY\",\"slug\":\"_5-2-2-cluster-by\",\"link\":\"#_5-2-2-cluster-by\",\"children\":[]},{\"level\":3,\"title\":\"5.2.3 CLUSTER、DISTRIBUTE、SORT、ORDER BY对比\",\"slug\":\"_5-2-3-cluster、distribute、sort、order-by对比\",\"link\":\"#_5-2-3-cluster、distribute、sort、order-by对比\",\"children\":[]},{\"level\":3,\"title\":\"5.2.4 UNION联合查询\",\"slug\":\"_5-2-4-union联合查询\",\"link\":\"#_5-2-4-union联合查询\",\"children\":[]},{\"level\":3,\"title\":\"5.2.5 FORM 子句中的子查询\",\"slug\":\"_5-2-5-form-子句中的子查询\",\"link\":\"#_5-2-5-form-子句中的子查询\",\"children\":[]},{\"level\":3,\"title\":\"5.2.6 WHERE 子句中的子查询\",\"slug\":\"_5-2-6-where-子句中的子查询\",\"link\":\"#_5-2-6-where-子句中的子查询\",\"children\":[]},{\"level\":3,\"title\":\"5.2.7 Common Table Expressions (CTE)\",\"slug\":\"_5-2-7-common-table-expressions-cte\",\"link\":\"#_5-2-7-common-table-expressions-cte\",\"children\":[]}]},{\"level\":2,\"title\":\"6.1 inner join 内连接\",\"slug\":\"_6-1-inner-join-内连接\",\"link\":\"#_6-1-inner-join-内连接\",\"children\":[]},{\"level\":2,\"title\":\"6.2 left join 左连接\",\"slug\":\"_6-2-left-join-左连接\",\"link\":\"#_6-2-left-join-左连接\",\"children\":[]},{\"level\":2,\"title\":\"6.3 right join 右连接\",\"slug\":\"_6-3-right-join-右连接\",\"link\":\"#_6-3-right-join-右连接\",\"children\":[]},{\"level\":2,\"title\":\"6.4 full outer join 全外连接\",\"slug\":\"_6-4-full-outer-join-全外连接\",\"link\":\"#_6-4-full-outer-join-全外连接\",\"children\":[]},{\"level\":2,\"title\":\"6.5 left semi join 左半开连接\",\"slug\":\"_6-5-left-semi-join-左半开连接\",\"link\":\"#_6-5-left-semi-join-左半开连接\",\"children\":[]},{\"level\":2,\"title\":\"6.6 cross join 交叉连接\",\"slug\":\"_6-6-cross-join-交叉连接\",\"link\":\"#_6-6-cross-join-交叉连接\",\"children\":[{\"level\":3,\"title\":\"6.7 Hive Join使用注意事项\",\"slug\":\"_6-7-hive-join使用注意事项\",\"link\":\"#_6-7-hive-join使用注意事项\",\"children\":[]}]}],\"git\":{\"createdTime\":null,\"updatedTime\":null,\"contributors\":[]},\"readingTime\":{\"minutes\":21.07,\"words\":6322},\"filePathRelative\":\"bigdata/hive/3.HiveSQL 数据操控、查询语言（DML、DQL）.md\",\"excerpt\":\"<h1> 1. Hive SQL-DML-Load加载数据</h1>\\n<blockquote>\\n<p>所谓加载是指：将数据文件移动到与Hive表对应的位置，移动时是纯复制、移动操作。</p>\\n<p>对于local（Hiveserver2所在机器）是复制操作，HDFS中的文件时移动操作。</p>\\n</blockquote>\\n<div class=\\\"language-sql line-numbers-mode\\\" data-ext=\\\"sql\\\"><pre class=\\\"language-sql\\\"><code><span class=\\\"token comment\\\">------ load语法规则 ----</span>\\n<span class=\\\"token keyword\\\">LOAD</span> <span class=\\\"token keyword\\\">DATA</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token keyword\\\">LOCAL</span><span class=\\\"token punctuation\\\">]</span> INPATH <span class=\\\"token string\\\">'filepath'</span> <span class=\\\"token punctuation\\\">[</span>OVERWRITE<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token keyword\\\">INTO</span> <span class=\\\"token keyword\\\">TABLE</span> tablename <span class=\\\"token punctuation\\\">[</span><span class=\\\"token keyword\\\">PARTITION</span> <span class=\\\"token punctuation\\\">(</span>partcol1<span class=\\\"token operator\\\">=</span>val1<span class=\\\"token punctuation\\\">,</span> partcol2<span class=\\\"token operator\\\">=</span>val2 <span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span>\\n\\n<span class=\\\"token keyword\\\">LOAD</span> <span class=\\\"token keyword\\\">DATA</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token keyword\\\">LOCAL</span><span class=\\\"token punctuation\\\">]</span> INPATH <span class=\\\"token string\\\">'filepath'</span> <span class=\\\"token punctuation\\\">[</span>OVERWRITE<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token keyword\\\">INTO</span> <span class=\\\"token keyword\\\">TABLE</span> tablename <span class=\\\"token punctuation\\\">[</span><span class=\\\"token keyword\\\">PARTITION</span> <span class=\\\"token punctuation\\\">(</span>partcol1<span class=\\\"token operator\\\">=</span>val1<span class=\\\"token punctuation\\\">,</span> partcol2<span class=\\\"token operator\\\">=</span>val2 <span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">[</span>INPUTFORMAT <span class=\\\"token string\\\">'inputformat'</span> SERDE <span class=\\\"token string\\\">'serde'</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3.0</span> <span class=\\\"token operator\\\">or</span> later<span class=\\\"token punctuation\\\">)</span>\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"copyright\":{\"author\":\"Vingkin\"},\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
