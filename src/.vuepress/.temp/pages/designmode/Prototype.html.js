export const data = JSON.parse("{\"key\":\"v-41c3c8a8\",\"path\":\"/designmode/Prototype.html\",\"title\":\"原型模式\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"原型模式\",\"author\":\"Vingkin\",\"date\":\"2022-06-21T00:00:00.000Z\",\"description\":\"概述 用一个已经创建的实例作为原型，通过复制该原型对象来创建一个和原型对象相同的新对象。 结构 原型模式包含如下角色： 抽象原型类：规定了具体原型对象必须实现的的 clone() 方法。 具体原型类：实现抽象原型类的 clone() 方法，它是可被复制的对象。 访问类：使用具体原型类中的 clone() 方法来复制新的对象。 接口类图如下：\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://vingkin.github.io/Blog/Blog/designmode/Prototype.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Vingkin的学习博客\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"原型模式\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"概述 用一个已经创建的实例作为原型，通过复制该原型对象来创建一个和原型对象相同的新对象。 结构 原型模式包含如下角色： 抽象原型类：规定了具体原型对象必须实现的的 clone() 方法。 具体原型类：实现抽象原型类的 clone() 方法，它是可被复制的对象。 访问类：使用具体原型类中的 clone() 方法来复制新的对象。 接口类图如下：\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2023-09-25T02:33:51.000Z\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Vingkin\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2022-06-21T00:00:00.000Z\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2023-09-25T02:33:51.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"原型模式\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2022-06-21T00:00:00.000Z\\\",\\\"dateModified\\\":\\\"2023-09-25T02:33:51.000Z\\\",\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Vingkin\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"概述\",\"slug\":\"概述\",\"link\":\"#概述\",\"children\":[]},{\"level\":2,\"title\":\"结构\",\"slug\":\"结构\",\"link\":\"#结构\",\"children\":[]},{\"level\":2,\"title\":\"实现\",\"slug\":\"实现\",\"link\":\"#实现\",\"children\":[]},{\"level\":2,\"title\":\"案例\",\"slug\":\"案例\",\"link\":\"#案例\",\"children\":[]},{\"level\":2,\"title\":\"使用场景\",\"slug\":\"使用场景\",\"link\":\"#使用场景\",\"children\":[]},{\"level\":2,\"title\":\"扩展（深克隆）\",\"slug\":\"扩展-深克隆\",\"link\":\"#扩展-深克隆\",\"children\":[]}],\"git\":{\"createdTime\":1695609231000,\"updatedTime\":1695609231000,\"contributors\":[{\"name\":\"Vingkin\",\"email\":\"1830053226@qq.com\",\"commits\":1}]},\"readingTime\":{\"minutes\":4.07,\"words\":1222},\"filePathRelative\":\"designmode/Prototype.md\",\"localizedDate\":\"2022年6月21日\",\"excerpt\":\"<h2> 概述</h2>\\n<p>用一个已经创建的实例作为原型，通过复制该原型对象来创建一个和原型对象相同的新对象。</p>\\n<h2> 结构</h2>\\n<p>原型模式包含如下角色：</p>\\n<ul>\\n<li>抽象原型类：规定了具体原型对象必须实现的的 clone() 方法。</li>\\n<li>具体原型类：实现抽象原型类的 clone() 方法，它是可被复制的对象。</li>\\n<li>访问类：使用具体原型类中的 clone() 方法来复制新的对象。</li>\\n</ul>\\n<p>接口类图如下：</p>\\n<figure><img src=\\\"https://vingkin-1304361015.cos.ap-shanghai.myqcloud.com/interview/原型模式.png\\\" alt=\\\"\\\" tabindex=\\\"0\\\" loading=\\\"lazy\\\"><figcaption></figcaption></figure>\",\"copyright\":{\"author\":\"Vingkin\"},\"autoDesc\":true}")
