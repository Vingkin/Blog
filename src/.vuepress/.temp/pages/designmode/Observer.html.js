export const data = JSON.parse("{\"key\":\"v-f06d0324\",\"path\":\"/designmode/Observer.html\",\"title\":\"观察者模式 / 发布-订阅模式 / 生产-消费模式\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"观察者模式 / 发布-订阅模式 / 生产-消费模式\",\"author\":\"Vingkin\",\"date\":\"2023-08-09T00:00:00.000Z\",\"description\":\"可见《图解设计模式》Observer模式篇 概述 在Observer模式中，当观察对象的状态发生变化时，会通知给观察者。Observer模式适用于根据对象状态进行相应处理的场景。Observer本来的意思是“观察者”，但实际上Observer角色并非主动地去观察，而是被动地接受来自Subject角色的通知。因此，Observer模式也被称为Publish-Subscribe（发布-订阅） 模式。 结构\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://vingkin.github.io/Blog/new_blog/designmode/Observer.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Vingkin的学习博客\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"观察者模式 / 发布-订阅模式 / 生产-消费模式\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"可见《图解设计模式》Observer模式篇 概述 在Observer模式中，当观察对象的状态发生变化时，会通知给观察者。Observer模式适用于根据对象状态进行相应处理的场景。Observer本来的意思是“观察者”，但实际上Observer角色并非主动地去观察，而是被动地接受来自Subject角色的通知。因此，Observer模式也被称为Publish-Subscribe（发布-订阅） 模式。 结构\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2023-09-25T02:33:51.000Z\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Vingkin\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2023-08-09T00:00:00.000Z\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2023-09-25T02:33:51.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"观察者模式 / 发布-订阅模式 / 生产-消费模式\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2023-08-09T00:00:00.000Z\\\",\\\"dateModified\\\":\\\"2023-09-25T02:33:51.000Z\\\",\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Vingkin\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"概述\",\"slug\":\"概述\",\"link\":\"#概述\",\"children\":[]},{\"level\":2,\"title\":\"结构\",\"slug\":\"结构\",\"link\":\"#结构\",\"children\":[]},{\"level\":2,\"title\":\"示例\",\"slug\":\"示例\",\"link\":\"#示例\",\"children\":[]}],\"git\":{\"createdTime\":1695609231000,\"updatedTime\":1695609231000,\"contributors\":[{\"name\":\"Vingkin\",\"email\":\"1830053226@qq.com\",\"commits\":1}]},\"readingTime\":{\"minutes\":2.08,\"words\":623},\"filePathRelative\":\"designmode/Observer.md\",\"localizedDate\":\"2023年8月9日\",\"excerpt\":\"<blockquote>\\n<p>可见《图解设计模式》Observer模式篇</p>\\n</blockquote>\\n<h2> 概述</h2>\\n<p>在Observer模式中，当观察对象的状态发生变化时，会通知给观察者。Observer模式适用于根据对象状态进行相应处理的场景。Observer本来的意思是“观察者”，但实际上Observer角色并非主动地去观察，而是被动地接受来自Subject角色的通知。因此，Observer模式也被称为<strong>Publish-Subscribe（发布-订阅）</strong> 模式。</p>\\n<h2> 结构</h2>\\n<img src=\\\"https://vingkin-1304361015.cos.ap-shanghai.myqcloud.com/img/微信截图_20230810094722.png\\\" style=\\\"zoom:50%;\\\">\",\"copyright\":{\"author\":\"Vingkin\"},\"autoDesc\":true}")
