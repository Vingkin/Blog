export const data = JSON.parse("{\"key\":\"v-20d8b3e1\",\"path\":\"/netty/nio/NIOvsBIO.html\",\"title\":\"NIO vs. BIO\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"NIO vs. BIO\",\"author\":\"vingkin\",\"date\":\"2022-07-22T00:00:00.000Z\",\"description\":\"stream vs channel stream 不会自动缓冲数据，channel 会利用系统提供的发送缓冲区、接收缓冲区（更为底层） stream 仅支持阻塞 API，channel 同时支持阻塞、非阻塞 API，网络 channel 可配合 selector 实现多路复用 二者均为全双工，即读写可以同时进行 IO 模型 同步阻塞、同步非阻塞、同步多路复用、异步阻塞（没有此情况）、异步非阻塞 同步：线程自己去获取结果（一个线程） 异步：线程自己不去获取结果，而是由其它线程送结果（至少两个线程）\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://vingkin.github.io/Blog/Blog/netty/nio/NIOvsBIO.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Vingkin的学习博客\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"NIO vs. BIO\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"stream vs channel stream 不会自动缓冲数据，channel 会利用系统提供的发送缓冲区、接收缓冲区（更为底层） stream 仅支持阻塞 API，channel 同时支持阻塞、非阻塞 API，网络 channel 可配合 selector 实现多路复用 二者均为全双工，即读写可以同时进行 IO 模型 同步阻塞、同步非阻塞、同步多路复用、异步阻塞（没有此情况）、异步非阻塞 同步：线程自己去获取结果（一个线程） 异步：线程自己不去获取结果，而是由其它线程送结果（至少两个线程）\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2023-09-25T02:33:51.000Z\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"vingkin\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2022-07-22T00:00:00.000Z\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2023-09-25T02:33:51.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"NIO vs. BIO\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2022-07-22T00:00:00.000Z\\\",\\\"dateModified\\\":\\\"2023-09-25T02:33:51.000Z\\\",\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"vingkin\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"stream vs channel\",\"slug\":\"stream-vs-channel\",\"link\":\"#stream-vs-channel\",\"children\":[]},{\"level\":2,\"title\":\"IO 模型\",\"slug\":\"io-模型\",\"link\":\"#io-模型\",\"children\":[{\"level\":3,\"title\":\"参考🔖\",\"slug\":\"参考🔖\",\"link\":\"#参考🔖\",\"children\":[]}]},{\"level\":2,\"title\":\"零拷贝\",\"slug\":\"零拷贝\",\"link\":\"#零拷贝\",\"children\":[{\"level\":3,\"title\":\"传统 IO 问题\",\"slug\":\"传统-io-问题\",\"link\":\"#传统-io-问题\",\"children\":[]},{\"level\":3,\"title\":\"NIO 优化\",\"slug\":\"nio-优化\",\"link\":\"#nio-优化\",\"children\":[]}]},{\"level\":2,\"title\":\"AIO\",\"slug\":\"aio\",\"link\":\"#aio\",\"children\":[{\"level\":3,\"title\":\"文件 AIO\",\"slug\":\"文件-aio\",\"link\":\"#文件-aio\",\"children\":[]},{\"level\":3,\"title\":\"守护线程💡\",\"slug\":\"守护线程💡\",\"link\":\"#守护线程💡\",\"children\":[]},{\"level\":3,\"title\":\"网络 AIO\",\"slug\":\"网络-aio\",\"link\":\"#网络-aio\",\"children\":[]}]}],\"git\":{\"createdTime\":1695609231000,\"updatedTime\":1695609231000,\"contributors\":[{\"name\":\"Vingkin\",\"email\":\"1830053226@qq.com\",\"commits\":1}]},\"readingTime\":{\"minutes\":6.34,\"words\":1903},\"filePathRelative\":\"netty/nio/NIOvsBIO.md\",\"localizedDate\":\"2022年7月22日\",\"excerpt\":\"<h2> stream vs channel</h2>\\n<ul>\\n<li>stream 不会自动缓冲数据，channel 会利用系统提供的发送缓冲区、接收缓冲区（更为底层）</li>\\n<li>stream 仅支持阻塞 API，channel 同时支持阻塞、非阻塞 API，网络 channel 可配合 selector 实现多路复用</li>\\n<li>二者均为全双工，即读写可以同时进行</li>\\n</ul>\\n<h2> IO 模型</h2>\\n<p>同步阻塞、同步非阻塞、同步多路复用、异步阻塞（没有此情况）、异步非阻塞</p>\\n<ul>\\n<li>同步：线程自己去获取结果（一个线程）</li>\\n<li>异步：线程自己不去获取结果，而是由其它线程送结果（至少两个线程）</li>\\n</ul>\",\"copyright\":{\"author\":\"vingkin\"},\"autoDesc\":true}")
