export const data = JSON.parse("{\"key\":\"v-494a56f8\",\"path\":\"/netty/advance/bag.html\",\"title\":\"粘包与半包\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"粘包与半包\",\"author\":\"vingkin\",\"date\":\"2022-07-27T00:00:00.000Z\",\"description\":\"粘包现象 服务端代码 public class HelloWorldServer { static final Logger log = LoggerFactory.getLogger(HelloWorldServer.class); void start() { NioEventLoopGroup boss = new NioEventLoopGroup(1); NioEventLoopGroup worker = new NioEventLoopGroup(); try { ServerBootstrap serverBootstrap = new ServerBootstrap(); serverBootstrap.channel(NioServerSocketChannel.class); serverBootstrap.group(boss, worker); serverBootstrap.childHandler(new ChannelInitializer&lt;SocketChannel&gt;() { @Override protected void initChannel(SocketChannel ch) throws Exception { ch.pipeline().addLast(new LoggingHandler(LogLevel.DEBUG)); ch.pipeline().addLast(new ChannelInboundHandlerAdapter() { @Override public void channelActive(ChannelHandlerContext ctx) throws Exception { log.debug(\\\"connected {}\\\", ctx.channel()); super.channelActive(ctx); } @Override public void channelInactive(ChannelHandlerContext ctx) throws Exception { log.debug(\\\"disconnect {}\\\", ctx.channel()); super.channelInactive(ctx); } }); } }); ChannelFuture channelFuture = serverBootstrap.bind(8080); log.debug(\\\"{} binding...\\\", channelFuture.channel()); channelFuture.sync(); log.debug(\\\"{} bound...\\\", channelFuture.channel()); channelFuture.channel().closeFuture().sync(); } catch (InterruptedException e) { log.error(\\\"server error\\\", e); } finally { boss.shutdownGracefully(); worker.shutdownGracefully(); log.debug(\\\"stoped\\\"); } } public static void main(String[] args) { new HelloWorldServer().start(); } }\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://vingkin.github.io/Blog/netty/advance/bag.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Vingkin的学习博客\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"粘包与半包\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"粘包现象 服务端代码 public class HelloWorldServer { static final Logger log = LoggerFactory.getLogger(HelloWorldServer.class); void start() { NioEventLoopGroup boss = new NioEventLoopGroup(1); NioEventLoopGroup worker = new NioEventLoopGroup(); try { ServerBootstrap serverBootstrap = new ServerBootstrap(); serverBootstrap.channel(NioServerSocketChannel.class); serverBootstrap.group(boss, worker); serverBootstrap.childHandler(new ChannelInitializer&lt;SocketChannel&gt;() { @Override protected void initChannel(SocketChannel ch) throws Exception { ch.pipeline().addLast(new LoggingHandler(LogLevel.DEBUG)); ch.pipeline().addLast(new ChannelInboundHandlerAdapter() { @Override public void channelActive(ChannelHandlerContext ctx) throws Exception { log.debug(\\\"connected {}\\\", ctx.channel()); super.channelActive(ctx); } @Override public void channelInactive(ChannelHandlerContext ctx) throws Exception { log.debug(\\\"disconnect {}\\\", ctx.channel()); super.channelInactive(ctx); } }); } }); ChannelFuture channelFuture = serverBootstrap.bind(8080); log.debug(\\\"{} binding...\\\", channelFuture.channel()); channelFuture.sync(); log.debug(\\\"{} bound...\\\", channelFuture.channel()); channelFuture.channel().closeFuture().sync(); } catch (InterruptedException e) { log.error(\\\"server error\\\", e); } finally { boss.shutdownGracefully(); worker.shutdownGracefully(); log.debug(\\\"stoped\\\"); } } public static void main(String[] args) { new HelloWorldServer().start(); } }\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"vingkin\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2022-07-27T00:00:00.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"粘包与半包\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2022-07-27T00:00:00.000Z\\\",\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"vingkin\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"粘包现象\",\"slug\":\"粘包现象\",\"link\":\"#粘包现象\",\"children\":[]},{\"level\":2,\"title\":\"半包现象\",\"slug\":\"半包现象\",\"link\":\"#半包现象\",\"children\":[]},{\"level\":2,\"title\":\"现象分析\",\"slug\":\"现象分析\",\"link\":\"#现象分析\",\"children\":[]},{\"level\":2,\"title\":\"解决方案\",\"slug\":\"解决方案\",\"link\":\"#解决方案\",\"children\":[{\"level\":3,\"title\":\"方法1：短链接\",\"slug\":\"方法1-短链接\",\"link\":\"#方法1-短链接\",\"children\":[]},{\"level\":3,\"title\":\"方法2：固定长度\",\"slug\":\"方法2-固定长度\",\"link\":\"#方法2-固定长度\",\"children\":[]},{\"level\":3,\"title\":\"方法3：固定分隔符\",\"slug\":\"方法3-固定分隔符\",\"link\":\"#方法3-固定分隔符\",\"children\":[]},{\"level\":3,\"title\":\"方法4：预设长度\",\"slug\":\"方法4-预设长度\",\"link\":\"#方法4-预设长度\",\"children\":[]}]}],\"git\":{},\"readingTime\":{\"minutes\":17.06,\"words\":5118},\"filePathRelative\":\"netty/advance/bag.md\",\"localizedDate\":\"2022年7月27日\",\"excerpt\":\"<h2> 粘包现象</h2>\\n<p>服务端代码</p>\\n<div class=\\\"language-java line-numbers-mode\\\" data-ext=\\\"java\\\"><pre class=\\\"language-java\\\"><code><span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">HelloWorldServer</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">static</span> <span class=\\\"token keyword\\\">final</span> <span class=\\\"token class-name\\\">Logger</span> log <span class=\\\"token operator\\\">=</span> <span class=\\\"token class-name\\\">LoggerFactory</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getLogger</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">HelloWorldServer</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">class</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">start</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token class-name\\\">NioEventLoopGroup</span> boss <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">NioEventLoopGroup</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token class-name\\\">NioEventLoopGroup</span> worker <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">NioEventLoopGroup</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token class-name\\\">ServerBootstrap</span> serverBootstrap <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">ServerBootstrap</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            serverBootstrap<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">channel</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">NioServerSocketChannel</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">class</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            serverBootstrap<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">group</span><span class=\\\"token punctuation\\\">(</span>boss<span class=\\\"token punctuation\\\">,</span> worker<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            serverBootstrap<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">childHandler</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">ChannelInitializer</span><span class=\\\"token generics\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">SocketChannel</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token annotation punctuation\\\">@Override</span>\\n                <span class=\\\"token keyword\\\">protected</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">initChannel</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">SocketChannel</span> ch<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throws</span> <span class=\\\"token class-name\\\">Exception</span> <span class=\\\"token punctuation\\\">{</span>\\n                    ch<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pipeline</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">addLast</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">LoggingHandler</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">LogLevel</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">DEBUG</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                    ch<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">pipeline</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">addLast</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">ChannelInboundHandlerAdapter</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n                        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">channelActive</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">ChannelHandlerContext</span> ctx<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throws</span> <span class=\\\"token class-name\\\">Exception</span> <span class=\\\"token punctuation\\\">{</span>\\n                            log<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">debug</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"connected {}\\\"</span><span class=\\\"token punctuation\\\">,</span> ctx<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">channel</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                            <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">channelActive</span><span class=\\\"token punctuation\\\">(</span>ctx<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                        <span class=\\\"token punctuation\\\">}</span>\\n\\n                        <span class=\\\"token annotation punctuation\\\">@Override</span>\\n                        <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">channelInactive</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">ChannelHandlerContext</span> ctx<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throws</span> <span class=\\\"token class-name\\\">Exception</span> <span class=\\\"token punctuation\\\">{</span>\\n                            log<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">debug</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"disconnect {}\\\"</span><span class=\\\"token punctuation\\\">,</span> ctx<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">channel</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                            <span class=\\\"token keyword\\\">super</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">channelInactive</span><span class=\\\"token punctuation\\\">(</span>ctx<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                        <span class=\\\"token punctuation\\\">}</span>\\n                    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token class-name\\\">ChannelFuture</span> channelFuture <span class=\\\"token operator\\\">=</span> serverBootstrap<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">8080</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            log<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">debug</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"{} binding...\\\"</span><span class=\\\"token punctuation\\\">,</span> channelFuture<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">channel</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            channelFuture<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">sync</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            log<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">debug</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"{} bound...\\\"</span><span class=\\\"token punctuation\\\">,</span> channelFuture<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">channel</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            channelFuture<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">channel</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">closeFuture</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">sync</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">InterruptedException</span> e<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            log<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"server error\\\"</span><span class=\\\"token punctuation\\\">,</span> e<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">finally</span> <span class=\\\"token punctuation\\\">{</span>\\n            boss<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">shutdownGracefully</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            worker<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">shutdownGracefully</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            log<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">debug</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"stoped\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">static</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">String</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span> args<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">HelloWorldServer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">start</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"copyright\":{\"author\":\"vingkin\"},\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
