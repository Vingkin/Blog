export const data = JSON.parse("{\"key\":\"v-48645c90\",\"path\":\"/guide/interview/JDK8.html\",\"title\":\"JDK8新特性\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"JDK8新特性\",\"author\":\"Vingkin\",\"date\":\"2023-08-08T00:00:00.000Z\",\"description\":\"Lambda lambda针对函数式接口进行简化编程，相对还算比较容易。 在排序方面比较常用，示例如下： Collections.sort(employees, (e1, e2) -&gt; { if (e1.getAge() == e2.getAge()) { return e2.getName().compareTo(e1.getName()); } return Integer.compare(e1.getAge(), e2.getAge()); });\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://vingkin.github.io/Blog/Blog/guide/interview/JDK8.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Vingkin的学习博客\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"JDK8新特性\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"Lambda lambda针对函数式接口进行简化编程，相对还算比较容易。 在排序方面比较常用，示例如下： Collections.sort(employees, (e1, e2) -&gt; { if (e1.getAge() == e2.getAge()) { return e2.getName().compareTo(e1.getName()); } return Integer.compare(e1.getAge(), e2.getAge()); });\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2023-09-25T02:33:51.000Z\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Vingkin\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2023-08-08T00:00:00.000Z\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2023-09-25T02:33:51.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"JDK8新特性\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2023-08-08T00:00:00.000Z\\\",\\\"dateModified\\\":\\\"2023-09-25T02:33:51.000Z\\\",\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Vingkin\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"Lambda\",\"slug\":\"lambda\",\"link\":\"#lambda\",\"children\":[]},{\"level\":2,\"title\":\"Stream\",\"slug\":\"stream\",\"link\":\"#stream\",\"children\":[{\"level\":3,\"title\":\"筛选与切片\",\"slug\":\"筛选与切片\",\"link\":\"#筛选与切片\",\"children\":[]},{\"level\":3,\"title\":\"映射\",\"slug\":\"映射\",\"link\":\"#映射\",\"children\":[]},{\"level\":3,\"title\":\"排序\",\"slug\":\"排序\",\"link\":\"#排序\",\"children\":[]},{\"level\":3,\"title\":\"查找与匹配\",\"slug\":\"查找与匹配\",\"link\":\"#查找与匹配\",\"children\":[]},{\"level\":3,\"title\":\"规约\",\"slug\":\"规约\",\"link\":\"#规约\",\"children\":[]},{\"level\":3,\"title\":\"收集\",\"slug\":\"收集\",\"link\":\"#收集\",\"children\":[]}]}],\"git\":{\"createdTime\":1695609231000,\"updatedTime\":1695609231000,\"contributors\":[{\"name\":\"Vingkin\",\"email\":\"1830053226@qq.com\",\"commits\":1}]},\"readingTime\":{\"minutes\":3.31,\"words\":992},\"filePathRelative\":\"guide/interview/JDK8.md\",\"localizedDate\":\"2023年8月8日\",\"excerpt\":\"<h2> Lambda</h2>\\n<p>lambda针对函数式接口进行简化编程，相对还算比较容易。</p>\\n<p>在排序方面比较常用，示例如下：</p>\\n<div class=\\\"language-java line-numbers-mode\\\" data-ext=\\\"java\\\"><pre class=\\\"language-java\\\"><code><span class=\\\"token class-name\\\">Collections</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">sort</span><span class=\\\"token punctuation\\\">(</span>employees<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>e1<span class=\\\"token punctuation\\\">,</span> e2<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">-&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>e1<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getAge</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">==</span> e2<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getAge</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">return</span> e2<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">compareTo</span><span class=\\\"token punctuation\\\">(</span>e1<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token keyword\\\">return</span> <span class=\\\"token class-name\\\">Integer</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">compare</span><span class=\\\"token punctuation\\\">(</span>e1<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getAge</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> e2<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getAge</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre><div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"copyright\":{\"author\":\"Vingkin\"},\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
