export const data = JSON.parse("{\"key\":\"v-311f309e\",\"path\":\"/guide/interview/database/Mysql.html\",\"title\":\"MySQL\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"MySQL\",\"author\":\"Vingkin\",\"date\":\"2022-04-24T00:00:00.000Z\",\"description\":\"说说对MySQL索引的理解 索引是在存储引擎中实现的，因此，每种存储引擎的索引都不一定完全相同，并且每种存储引擎也不一定支持所有的索引类型。MySQL中索引的存储类型有两种，即BTREE和HASH，具体和表的存储引擎相关。MyISAM和InnoDB的存储引擎只支持BTREE索引，MEMORY存储引擎支持HASH和BTREE索引。 优点：\"},\"headers\":[{\"level\":2,\"title\":\"说说对MySQL索引的理解\",\"slug\":\"说说对mysql索引的理解\",\"link\":\"#说说对mysql索引的理解\",\"children\":[]},{\"level\":2,\"title\":\"为了减少IO，索引树会一次性加载吗\",\"slug\":\"为了减少io-索引树会一次性加载吗\",\"link\":\"#为了减少io-索引树会一次性加载吗\",\"children\":[]},{\"level\":2,\"title\":\"B+树的存储能力如何？为何说一般查找行记录，最多只需1~3次磁盘IO（为什么索引使用B+树）\",\"slug\":\"b-树的存储能力如何-为何说一般查找行记录-最多只需1-3次磁盘io-为什么索引使用b-树\",\"link\":\"#b-树的存储能力如何-为何说一般查找行记录-最多只需1-3次磁盘io-为什么索引使用b-树\",\"children\":[]},{\"level\":2,\"title\":\"为什么B+树比B树更适合做索引\",\"slug\":\"为什么b-树比b树更适合做索引\",\"link\":\"#为什么b-树比b树更适合做索引\",\"children\":[]},{\"level\":2,\"title\":\"InnoDB为什么不建议用过长的字段作为主键\",\"slug\":\"innodb为什么不建议用过长的字段作为主键\",\"link\":\"#innodb为什么不建议用过长的字段作为主键\",\"children\":[]},{\"level\":2,\"title\":\"InnoDB为什么使用自增主键是一个很好的选择\",\"slug\":\"innodb为什么使用自增主键是一个很好的选择\",\"link\":\"#innodb为什么使用自增主键是一个很好的选择\",\"children\":[]},{\"level\":2,\"title\":\"Hash结构效率高，那为什么还要使用B+树索引呢\",\"slug\":\"hash结构效率高-那为什么还要使用b-树索引呢\",\"link\":\"#hash结构效率高-那为什么还要使用b-树索引呢\",\"children\":[]},{\"level\":2,\"title\":\"索引的分类\",\"slug\":\"索引的分类\",\"link\":\"#索引的分类\",\"children\":[]},{\"level\":2,\"title\":\"哪些情况适合创建索引\",\"slug\":\"哪些情况适合创建索引\",\"link\":\"#哪些情况适合创建索引\",\"children\":[]},{\"level\":2,\"title\":\"哪些情况不适合创建索引\",\"slug\":\"哪些情况不适合创建索引\",\"link\":\"#哪些情况不适合创建索引\",\"children\":[]},{\"level\":2,\"title\":\"索引下推\",\"slug\":\"索引下推\",\"link\":\"#索引下推\",\"children\":[]},{\"level\":2,\"title\":\"EXISTS和IN的区分\",\"slug\":\"exists和in的区分\",\"link\":\"#exists和in的区分\",\"children\":[]},{\"level\":2,\"title\":\"COUNT(*), COUNT(1)和COUNT(具体字段)\",\"slug\":\"count-count-1-和count-具体字段\",\"link\":\"#count-count-1-和count-具体字段\",\"children\":[]},{\"level\":2,\"title\":\"关于SELECT(*)\",\"slug\":\"关于select\",\"link\":\"#关于select\",\"children\":[]},{\"level\":2,\"title\":\"多使用COMMIT\",\"slug\":\"多使用commit\",\"link\":\"#多使用commit\",\"children\":[]},{\"level\":2,\"title\":\"主键如何设计\",\"slug\":\"主键如何设计\",\"link\":\"#主键如何设计\",\"children\":[{\"level\":3,\"title\":\"自增ID的问题\",\"slug\":\"自增id的问题\",\"link\":\"#自增id的问题\",\"children\":[]},{\"level\":3,\"title\":\"推荐的主键设计\",\"slug\":\"推荐的主键设计\",\"link\":\"#推荐的主键设计\",\"children\":[]}]},{\"level\":2,\"title\":\"谈谈你对MVCC的了解\",\"slug\":\"谈谈你对mvcc的了解\",\"link\":\"#谈谈你对mvcc的了解\",\"children\":[]},{\"level\":2,\"title\":\"WHERE和HAVING的区别\",\"slug\":\"where和having的区别\",\"link\":\"#where和having的区别\",\"children\":[]},{\"level\":2,\"title\":\"数据库索引失效了怎么办\",\"slug\":\"数据库索引失效了怎么办\",\"link\":\"#数据库索引失效了怎么办\",\"children\":[]},{\"level\":2,\"title\":\"事务的四大特性以及如何实现\",\"slug\":\"事务的四大特性以及如何实现\",\"link\":\"#事务的四大特性以及如何实现\",\"children\":[]},{\"level\":2,\"title\":\"MySQL的悲观锁和乐观锁\",\"slug\":\"mysql的悲观锁和乐观锁\",\"link\":\"#mysql的悲观锁和乐观锁\",\"children\":[]},{\"level\":2,\"title\":\"根据锁的类型分类\",\"slug\":\"根据锁的类型分类\",\"link\":\"#根据锁的类型分类\",\"children\":[]},{\"level\":2,\"title\":\"根据锁的粒度进行分类\",\"slug\":\"根据锁的粒度进行分类\",\"link\":\"#根据锁的粒度进行分类\",\"children\":[{\"level\":3,\"title\":\"表锁\",\"slug\":\"表锁\",\"link\":\"#表锁\",\"children\":[]},{\"level\":3,\"title\":\"行锁\",\"slug\":\"行锁\",\"link\":\"#行锁\",\"children\":[]}]},{\"level\":2,\"title\":\"InnoDB中行级锁是怎么实现的\",\"slug\":\"innodb中行级锁是怎么实现的\",\"link\":\"#innodb中行级锁是怎么实现的\",\"children\":[]},{\"level\":2,\"title\":\"数据库死锁问题以及解决办法\",\"slug\":\"数据库死锁问题以及解决办法\",\"link\":\"#数据库死锁问题以及解决办法\",\"children\":[]}],\"git\":{\"createdTime\":null,\"updatedTime\":null,\"contributors\":[]},\"readingTime\":{\"minutes\":23.64,\"words\":7093},\"filePathRelative\":\"guide/interview/database/Mysql.md\",\"localizedDate\":\"2022年4月24日\",\"excerpt\":\"<h2> 说说对MySQL索引的理解</h2>\\n<p>索引是在存储引擎中实现的，因此，每种存储引擎的索引都不一定完全相同，并且每种存储引擎也不一定支持所有的索引类型。MySQL中索引的存储类型有两种，即<code>BTREE</code>和<code>HASH</code>，具体和表的存储引擎相关。<code>MyISAM</code>和<code>InnoDB</code>的存储引擎只支持<code>BTREE</code>索引，<code>MEMORY</code>存储引擎支持<code>HASH</code>和<code>BTREE</code>索引。</p>\\n<p><strong>优点：</strong></p>\",\"copyright\":{\"author\":\"Vingkin\"},\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
